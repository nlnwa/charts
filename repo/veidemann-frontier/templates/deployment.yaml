{{- $global := .Values.global.veidemann -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "veidemann-frontier.fullname" . }}
  labels:
    app: veidemann
    component: {{ template "veidemann-frontier.name" . }}
    chart: {{ template "veidemann-frontier.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      component: {{ template "veidemann-frontier.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: veidemann
        component: {{ template "veidemann-frontier.name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: workdir
          emptyDir: {}
        - name: log4j-config
          configMap:
            name: {{ template "veidemann-frontier.configPrefix" . }}
            items:
              - key: log4j2.xml
                path: log4j2.xml
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: grpc
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ template "veidemann-frontier.configPrefix" . }}-rethinkdb-env
                optional: false
            - secretRef:
                name: {{ template "veidemann-frontier.configPrefix" . }}-rethinkdb-env
                optional: false
          {{- if not .Values.global.veidemann.jaeger }}
            - configMapRef:
                name: {{ template "veidemann-frontier.configPrefix" . }}-jaeger-env
                optional: true
          {{- end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: API_PORT
              value: {{ .Values.service.port | quote }}
            - name: ROBOTS_EVALUATOR_HOST
            {{- if or .Values.config.robotsEvaluator.host $global.mesh.host }}
              value: {{ default .Values.config.robotsEvaluator.host $global.mesh.host | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-frontier.configPrefix" . }}
                  key: robotsEvaluator.host
            {{- end }}
            - name: ROBOTS_EVALUATOR_PORT
            {{- if or .Values.config.robotsEvaluator.port $global.mesh.port }}
              value: {{ default .Values.config.robotsEvaluator.port $global.mesh.port | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-frontier.configPrefix" . }}
                  key: robotsEvaluator.port
            {{- end }}
            - name: DNS_RESOLVER_HOST
            {{- if or .Values.config.dnsResolver.host $global.mesh.host }}
              value: {{ default .Values.config.dnsResolver.host $global.mesh.host | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-frontier.configPrefix" . }}
                  key: dnsResolver.host
            {{- end }}
            - name: DNS_RESOLVER_PORT
            {{- if or .Values.config.dnsResolver.port $global.mesh.port }}
              value: {{ default .Values.config.dnsResolver.port $global.mesh.port | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-frontier.configPrefix" . }}
                  key: dnsResolver.port
            {{- end }}
            - name: OOS_HANDLER_HOST
            {{- if or .Values.config.oosHandler.host $global.mesh.host }}
              value: {{ default .Values.config.oosHandler.host $global.mesh.host | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-frontier.configPrefix" . }}
                  key: oosHandler.host
            {{- end }}
            - name: OOS_HANDLER_PORT
            {{- if or .Values.config.oosHandler.port $global.mesh.port }}
              value: {{ default .Values.config.oosHandler.port $global.mesh.port | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-frontier.configPrefix" . }}
                  key: oosHandler.port
            {{- end }}
            - name: JAVA_OPTS
              value: {{ default .Values.config.javaOpts | quote }}
          {{- with .Values.global.veidemann.jaeger }}
            - name: JAEGER_AGENT_HOST
              value: {{ .agent.host | quote }}
            - name: JAEGER_AGENT_PORT
              value: {{ .agent.port | quote }}
            - name: JAEGER_SAMPLER_TYPE
              value: {{ .sampler.type | quote }}
            - name: JAEGER_SAMPLER_PARAM
              value: {{ .sampler.param | quote }}
          {{- end }}
          volumeMounts:
            - mountPath: /workdir
              name: workdir
            - name: log4j-config
              mountPath: /veidemann/config/log4j2.xml
              subPath: log4j2.xml
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
