{{- $global := .Values.global.veidemann -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "veidemann-dnsresolver.fullname" . }}
  labels:
    app: veidemann
    component: {{ template "veidemann-dnsresolver.name" . }}
    chart: {{ template "veidemann-dnsresolver.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      component: {{ template "veidemann-dnsresolver.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: veidemann
        component: {{ template "veidemann-dnsresolver.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: grpc
              containerPort: {{ .Values.service.internalGrpcPort }}
            - name: dns
              containerPort: {{ .Values.service.internalDnsPort }}
              protocol: UDP
            - name: dns-tcp
              containerPort: {{ .Values.service.internalDnsPort }}
              protocol: TCP
            - name: http-metrics
              containerPort: {{ .Values.service.internalMetricsPort }}
            - name: http-health
              containerPort: {{ .Values.service.internalHealthPort }}
          envFrom:
            - configMapRef:
                name: {{ template "veidemann-dnsresolver.configPrefix" . }}-rethinkdb-env
                optional: false
            - secretRef:
                name: {{ template "veidemann-dnsresolver.configPrefix" . }}-rethinkdb-env
                optional: false
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: CONTENT_WRITER_HOST
            {{- if or .Values.config.contentWriter.host $global.mesh.host }}
              value: {{ default .Values.config.contentWriter.host $global.mesh.host | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-dnsresolver.configPrefix" . }}
                  key: contentWriter.host
            {{- end }}
            - name: CONTENT_WRITER_PORT
            {{- if or .Values.config.contentWriter.port $global.mesh.port }}
              value: {{ default .Values.config.contentWriter.port $global.mesh.port | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-dnsresolver.configPrefix" . }}
                  key: contentWriter.port
            {{- end }}
            - name: DNS_SERVER
              value: {{ .Values.config.dnsServer | quote }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
