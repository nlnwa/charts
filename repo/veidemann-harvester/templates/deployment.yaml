apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "veidemann-harvester.fullname" . }}
  labels:
    app: veidemann
    component: {{ template "veidemann-harvester.name" . }}
    chart: {{ template "veidemann-harvester.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- with .Values.annotations }}
  annotations:
{{ toYaml . | nindent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      component: {{ template "veidemann-harvester.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: veidemann
        component: {{ template "veidemann-harvester.name" . }}
        release: {{ .Release.Name }}
    {{- with .Values.podAnnotations }}
      annotations:
{{ toYaml . | nindent 8 }}
    {{- end }}
    spec:
      volumes:
        - name: workdir
          emptyDir: {}
        - name: log4j-config
          configMap:
            name: {{ template "veidemann-harvester.configPrefix" . }}
            items:
            - key: log4j2.xml
              path: log4j2.xml
        - name: dshm
          emptyDir:
            medium: Memory
        - name: cache-certificate
          secret:
            secretName: {{ .Release.Name }}-veidemann-cache
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.proxy.image.repository }}:{{ default .Chart.AppVersion .Values.proxy.image.tag }}"
          imagePullPolicy: {{ .Values.proxy.image.pullPolicy }}
        {{- with .Values.proxy.ports }}
          ports:
{{ toYaml . | indent 12 }}
        {{- end }}
          envFrom:
            - secretRef:
                name: {{ template "veidemann-harvester.configPrefix" . }}-rethinkdb-env
                optional: false
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DB_HOST
              value: {{ default .Values.global.veidemann.rethinkdb.host .Values.proxy.config.rethinkdb.host | quote }}
            - name: DB_PORT
              value: {{ default .Values.global.veidemann.rethinkdb.port .Values.proxy.config.rethinkdb.port | quote }}
            - name: DB_NAME
              value: {{ default .Values.global.veidemann.rethinkdb.name .Values.proxy.config.rethinkdb.name | quote }}
            - name: BROWSER_WS_ENDPOINT
              value: {{ .Values.proxy.config.browserWSEndpoint | quote }}
            - name: MAX_OPEN_SESSIONS
              value: {{ .Values.proxy.config.maxOpenSessions | quote }}
            - name: FRONTIER_HOST
            {{- if .Values.proxy.config.frontier.host }}
              value: {{ .Values.proxy.config.frontier.host | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-harvester.configPrefix" . }}
                  key: frontier.host
            {{- end }}
            - name: FRONTIER_PORT
            {{- if .Values.proxy.config.frontier.port }}
              value: {{ .Values.proxy.config.frontier.port | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-harvester.configPrefix" . }}
                  key: frontier.port
            {{- end }}
            - name: CONTENT_WRITER_HOST
            {{- if .Values.proxy.config.contentWriter.host }}
              value: {{ default .Values.proxy.config.contentWriter.host | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-harvester.configPrefix" . }}
                  key: contentWriter.host
            {{- end }}
            - name: CONTENT_WRITER_PORT
            {{- if .Values.proxy.config.contentWriter.port }}
              value: {{ .Values.proxy.config.contentWriter.port | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-harvester.configPrefix" . }}
                  key: contentWriter.port
            {{- end }}
            - name: DNS_RESOLVER_HOST
            {{- if .Values.proxy.config.dnsResolver.host }}
              value: {{ .Values.proxy.config.dnsResolver.host | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-harvester.configPrefix" . }}
                  key: dnsResolver.host
            {{- end }}
            - name: DNS_RESOLVER_PORT
            {{- if .Values.proxy.config.dnsResolver.port }}
              value: {{ .Values.proxy.config.dnsResolver.port | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-harvester.configPrefix" . }}
                  key: dnsResolver.port
            {{- end }}
            - name: CACHE_HOST
            {{- if .Values.proxy.config.cache.host }}
              value: {{ .Values.proxy.config.cache.host | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-harvester.configPrefix" . }}
                  key: cache.host
            {{- end }}
            - name: CACHE_PORT
            {{- if .Values.proxy.config.cache.port }}
              value: {{ .Values.proxy.config.cache.port | quote }}
            {{- else }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "veidemann-harvester.configPrefix" . }}
                  key: cache.port
            {{- end }}
            - name: JAVA_OPTS
              value: {{ .Values.proxy.config.javaOpts | quote }}
            - name: JAEGER_SERVICE_NAME
              value: {{ include "veidemann-harvester.fullname" . | quote }}
            - name: JAEGER_AGENT_HOST
              value: {{ default .Values.global.veidemann.jaeger.agent.host .Values.proxy.config.jaeger.agent.host | quote }}
            - name: JAEGER_AGENT_PORT
              value: {{ default .Values.global.veidemann.jaeger.agent.port .Values.proxy.config.jaeger.agent.port | quote }}
            {{- if or .Values.global.veidemann.jaeger.sampler.type .Values.proxy.config.jaeger.sampler.type }}
            - name: JAEGER_SAMPLER_TYPE
              value: {{ default .Values.global.veidemann.jaeger.sampler.type .Values.proxy.config.jaeger.sampler.type | quote }}
            {{- end }}
            {{- if or .Values.global.veidemann.jaeger.sampler.param .Values.proxy.config.jaeger.sampler.param }}
            - name: JAEGER_SAMPLER_PARAM
              value: {{ default .Values.global.veidemann.jaeger.sampler.param .Values.proxy.config.jaeger.sampler.param | quote }}
            {{- end }}
        {{- with .Values.proxy.livenessProbe }}
          livenessProbe:
{{ toYaml . | indent 12 }}
        {{- end }}
          readinessProbe:
        {{- with .Values.proxy.readinessProbe }}
{{ toYaml . | indent 12 }}
        {{- end }}
          volumeMounts:
            - mountPath: /workdir
              name: workdir
            - name: log4j-config
              mountPath: /veidemann/config/log4j2.xml
              subPath: log4j2.xml
            - name: cache-certificate
              mountPath: "/ca-certificates"
              readOnly: true
          resources:
{{ toYaml .Values.proxy.resources | indent 12 }}

        # Browser container
        - name: {{ .Chart.Name }}-browser
          image: "{{ .Values.browser.image.repository }}:{{ .Values.browser.image.tag }}"
          imagePullPolicy: {{ .Values.browser.image.pullPolicy }}
          ports:
{{ toYaml .Values.browser.ports | indent 12 }}
          env:
          - name: CONNECTION_TIMEOUT
            value: {{ .Values.browser.config.connectionTimeout | quote }}
          livenessProbe:
{{ toYaml .Values.browser.livenessProbe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.browser.readinessProbe | indent 12 }}
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
          resources:
{{ toYaml .Values.browser.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
