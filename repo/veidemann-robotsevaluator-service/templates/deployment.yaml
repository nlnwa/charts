apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "veidemann-robotsevaluator.fullname" . }}
  labels:
    app: veidemann
    component: {{ template "veidemann-robotsevaluator.name" . }}
    chart: {{ template "veidemann-robotsevaluator.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      component: {{ template "veidemann-robotsevaluator.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        component: {{ template "veidemann-robotsevaluator.name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: log4j-config
          configMap:
            name: {{ .Release.Name }}-veidemann
            items:
            - key: log4j2.xml
              path: log4j2.xml
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 50053
              protocol: TCP
          volumeMounts:
            - name: log4j-config
              mountPath: /veidemann/config/log4j2.xml
              subPath: log4j2.xml
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DB_HOST
              value: {{ .Values.config.db.host | quote }}
            - name: DB_PORT
              value: {{ .Values.config.db.port | quote }}
            - name: DB_NAME
              value: {{ .Values.config.db.name | quote }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.db.secretName }}
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.db.secretName }}
                  key: password
            - name: PROXY_HOST
              value: "{{ .Release.Name }}-{{ .Values.config.proxy.host }}"
            - name: PROXY_PORT
              value: {{ .Values.config.proxy.port | quote }}
            - name: JAEGER_AGENT_HOST
              value: {{ .Values.config.jaeger.agent.host | quote }}
            - name: JAEGER_AGENT_PORT
              value: {{ .Values.config.jaeger.agent.port | quote }}
            - name: JAEGER_SAMPLER_TYPE
              value: {{ .Values.config.jaeger.sampler.type | quote }}
            - name: JAEGER_SAMPLER_PARAM
              value: {{ .Values.config.jaeger.sampler.param | quote }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
