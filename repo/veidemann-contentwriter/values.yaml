# Default values for veidemann-contentwriter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: norsknettarkiv/veidemann-contentwriter
  tag: ""
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 8082

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 1Gi
  ## Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""

  # Annotations for the Persistent Volume Claim
  annotations: {}
  # helm.sh/resource-policy: keep

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound with the name e.g `cache-data`
  existingClaim: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

annotations: {}

podAnnotations: {}

config:
  terminationGracePeriodSeconds: 60
  warcWriterPoolSize: 2
  rethinkdb:
    host: ""
    port: ""
    name: ""
  jaeger:
    agent:
      host: ""
      port: ""
    sampler:
      type: ""
      param: ""


global:
  veidemann:
    rethinkdb:
      host: ""
      port: ""
      name: ""
    jaeger:
      agent:
        host: ""
        port: ""
      sampler:
        type: ""
        param: ""
