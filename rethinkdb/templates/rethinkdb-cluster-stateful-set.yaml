apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: "{{ template "rethinkdb.fullname" . }}-cluster"
  labels:
    app: "{{ template "rethinkdb.name" . }}-cluster"
    chart: {{ template "rethinkdb.chart" . }}
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
spec:
  serviceName: "{{ template "rethinkdb.fullname" . }}-cluster"
  replicas: {{ .Values.cluster.replicas }}
  selector:
    matchLabels:
      app: "{{ template "rethinkdb.name" . }}-cluster"
      chart: {{ template "rethinkdb.chart" . }}
      heritage: {{ .Release.Service | quote }}
      release: {{ .Release.Name | quote }}
  template:
    metadata:
      name: "{{ template "rethinkdb.fullname" . }}-cluster"
      labels:
        app: "{{ template "rethinkdb.name" . }}-cluster"
        chart: {{ template "rethinkdb.chart" . }}
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
      annotations:
      {{- if .Values.cluster.podAnnotations }}
{{ toYaml .Values.cluster.podAnnotations | indent 8 }}
      {{- end }}
    spec:
    {{- with .Values.cluster.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.cluster.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      serviceAccountName: {{ template "rethinkdb.serviceAccountName" . }}
      containers:
        - name: {{ template "rethinkdb.name" . }}-cluster
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          ports:
            - name: cluster
              containerPort: {{ .Values.ports.cluster }}
          args:
            - "--directory"
            - "/data/db"
            - "--bind"
            - "all"
            - "--no-http-admin"
            - "--cache-size"
            - {{ .Values.cluster.rethinkCacheSize | quote }}
          volumeMounts:
          {{- if .Values.cluster.volumeMounts }}
{{ toYaml .Values.cluster.volumeMounts | indent 12 }}
          {{- else }}
            - name: "datadir"
              mountPath: "/data/db"
          {{- end }}
          env:
            - name: RETHINK_CLUSTER_SERVICE
              value: "{{ template "rethinkdb.fullname" . }}-cluster"
            - name: RETHINKDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "rethinkdb.fullname" . }}
                  key: rethinkdb-password
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          livenessProbe:
            exec:
              command:
                - /rethinkdb-probe
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /rethinkdb-probe
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
{{ toYaml .Values.cluster.resources | indent 12 }}
{{- if .Values.cluster.persistentVolume.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
      {{- if .Values.cluster.storageClass.enabled }}
        volume.beta.kubernetes.io/storage-class: {{ template "rethinkdb.fullname" . }}
      {{- end }}
      {{- range $key, $value := .Values.cluster.persistentVolume.annotations }}
        {{ $key }}: {{ $value }}
      {{- end }}
    spec:
      accessModes:
      {{- range .Values.cluster.persistentVolume.accessModes }}
        - {{ . | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.cluster.persistentVolume.size | quote }}
{{- else }}
      volumes:
      {{- if .Values.cluster.volumes }}
{{ toYaml .Values.cluster.volumes | indent 8 }}
      {{- else }}
        - name: datadir
          emptyDir: {}
      {{- end }}
{{- end }}
