apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "veidemann-controller.fullname" . }}
  labels:
    app: veidemann
    component: {{ template "veidemann-controller.name" . }}
    chart: {{ template "veidemann-controller.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      component: {{ template "veidemann-controller.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        component: {{ template "veidemann-controller.name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: log4j-config
          configMap:
            name: {{ .Release.Name }}-veidemann
            items:
              - key: log4j2.xml
                path: log4j2.xml
      {{- if .Values.config.tls }}
        - name: ca
          secret:
            secretName: {{ .Values.config.tlsSecretName }}
            items:
              - key: tls.crt
                path: tls.crt
      {{- end }}
    {{- if .Values.config.hostAliases }}
      hostAliases:
{{ toYaml .Values.config.hostAliases | indent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 50051
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DB_HOST
              value: {{ .Values.config.db.host | quote }}
            - name: DB_PORT
              value: {{ .Values.config.db.port | quote }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.db.secretName }}
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.db.secretName }}
                  key: password
            - name: FRONTIER_HOST
              value: {{ .Values.config.frontier.host | quote }}
            - name: FRONTIER_PORT
              value: {{ .Values.config.frontier.port | quote }}
            - name: OPENID_CONNECT_ISSUER
              value: {{ .Values.config.issuer | quote }}
            - name: JAEGER_AGENT_HOST
              value: {{ .Values.config.jaeger.agent.host | quote }}
            - name: JAEGER_AGENT_PORT
              value: {{ .Values.config.jaeger.agent.port | quote }}
            - name: JAEGER_SAMPLER_TYPE
              value: {{ .Values.config.jaeger.sampler.type | quote }}
            - name: JAEGER_SAMPLER_PARAM
              value: {{ .Values.config.jaeger.sampler.param | quote }}
          volumeMounts:
            - name: log4j-config
              mountPath: /veidemann/config/log4j2.xml
              subPath: log4j2.xml
          {{- if .Values.config.tls }}
            - name: ca
              mountPath: /veidemann/trustedca/tls.crt
              subPath: tls.crt
          {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
